<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 태그 규칙을 정의한 DTD 선언 => XML 파일이 어떤 구조와 어떤 element, 어떤 attributes를 가지는지 정의하는 것 -->

<!-- SQL 구문이 존재하는 SQL Mapper 파일 -->
<mapper namespace="Design.Idea.mapper.VertexMapper">
    <!-- namespace : Mapper의 전체 경로를 지정 -->
    <!-- Root Element : 여러개의 SQL문을 묶는 용도로 사용 -->
    <!-- SELECT -> <select>, INSERT -> <insert>, UPDATE -> <update>, DELETE -> <delete> -->
    <!-- id : Mapper interface와 XML 파일을 매칭시키기 위해서 interface의 method명과 XML파일의 id를 동일하게 작성  -->
    <!-- resultType : SELECT문 실행 결과를 담을 객체 -->
    <!-- resultMap : SELECT문 실행 결과를 담을 객체를 resultMap으로 지정 -->
    <!-- parameterType : 객체의 프로퍼티값이 SQL문의 입력 파라미터에 지정 -->

    <insert id="SWSaveVertex" parameterType="Design.Idea.model.Vertex">
        INSERT INTO sidewalkvertex_info(SWVertexLatitude, SWVertexLongitude, SWIsDestination)
        VALUES (#{Lat}, #{Lng}, #{isDestination})
    </insert>

    <insert id="RSaveVertex" parameterType="Design.Idea.model.Vertex">
        INSERT INTO roadvertex_info(RVertexLatitude, RVertexLongitude, RIsDestination)
        VALUES (#{Lat}, #{Lng}, #{isDestination})
    </insert>

    <select id="SelectSWVertex" resultType="map">
        SELECT * FROM sidewalkvertex_info
    </select>

    <select id="SelectRVertex" resultType="map">
        SELECT * FROM roadvertex_info
    </select>

    <delete id="DeleteSWVertex" parameterType="Design.Idea.model.Vertex" statementType="CALLABLE">
        { call SWVTX_DEL_PROCEDURE( #{ID, mode=IN} ) }
    </delete>

    <delete id="DeleteRVertex" parameterType="Design.Idea.model.Vertex" statementType="CALLABLE">
        { call RVTX_DEL_PROCEDURE( #{ID, mode=IN} ) }
    </delete>
</mapper>
